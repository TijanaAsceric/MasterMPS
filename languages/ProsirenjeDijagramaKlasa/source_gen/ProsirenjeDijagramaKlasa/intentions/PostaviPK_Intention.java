package ProsirenjeDijagramaKlasa.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.IntentionDescriptorBase;
import jetbrains.mps.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.intentions.IntentionExecutable;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.intentions.IntentionType;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import java.util.Collections;
import jetbrains.mps.intentions.IntentionExecutableBase;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.intentions.IntentionDescriptor;

public final class PostaviPK_Intention extends IntentionDescriptorBase implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public PostaviPK_Intention() {
    super(MetaAdapterFactory.getConcept(0xb3d58ef49e3d4de2L, 0xb3bfe70ac74854dfL, 0x4ec45abfc9ea5b4cL, "ProsirenjeDijagramaKlasa.structure.Kolona"), IntentionType.NORMAL, false, new SNodePointer("r:5ab12537-c82a-406b-853e-4ff465f1208a(ProsirenjeDijagramaKlasa.intentions)", "4525104879240171630"));
  }
  @Override
  public String getPresentation() {
    return "PostaviPK";
  }
  @Override
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    return true;
  }
  @Override
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new PostaviPK_Intention.IntentionImplementation());
    }
    return myCachedExecutable;
  }
  /*package*/ final class IntentionImplementation extends IntentionExecutableBase {
    public IntentionImplementation() {
    }
    @Override
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Postavi primarni kljuc";
    }
    @Override
    public void execute(final SNode node, final EditorContext editorContext) {
      SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xb3d58ef49e3d4de2L, 0xb3bfe70ac74854dfL, 0x4ec45abfc9ea5b4cL, 0x3ecc66e9a27f5f6eL, "primarniKljuc"), "PK");
    }
    @Override
    public IntentionDescriptor getDescriptor() {
      return PostaviPK_Intention.this;
    }
  }
}
