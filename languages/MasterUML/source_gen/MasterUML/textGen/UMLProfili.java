package MasterUML.textGen;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.List;

public abstract class UMLProfili {
  public static void kreirajDDL(SNode element, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    if (SNodeOperations.isInstanceOf(element, MetaAdapterFactory.getConcept(0x95e80464dc8c4520L, 0xad10bc8df94efd78L, 0x4ec45abfc9ea5b49L, "MasterUML.structure.Tabela"))) {
      UMLProfili.kreirajTabelu(element, ctx);
    }
  }
  protected static void kreirajTabelu(SNode tabela, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("CREATE TABLE ");
    tgs.append(SPropertyOperations.getString(tabela, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
    tgs.append("(");
    tgs.newLine();
    UMLProfili.specificirajKolone(tabela, ctx);
    tgs.append(" )");
    tgs.newLine();
  }
  protected static void specificirajKolone(SNode tabela, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    for (SNode kolona : ListSequence.fromList(SLinkOperations.getChildren(tabela, MetaAdapterFactory.getContainmentLink(0x95e80464dc8c4520L, 0xad10bc8df94efd78L, 0x4ec45abfc9ea5b49L, 0x4ec45abfc9ea5b4fL, "kolone")))) {
      tgs.appendNode(kolona);
      tgs.newLine();
    }
    UMLProfili.specificirajPrimarniKljuc(SLinkOperations.getChildren(tabela, MetaAdapterFactory.getContainmentLink(0x95e80464dc8c4520L, 0xad10bc8df94efd78L, 0x4ec45abfc9ea5b49L, 0x1b60372de7d06bf9L, "ogranicenjaPK")), ctx);
    UMLProfili.specicirajSpoljniKljuc(SLinkOperations.getChildren(tabela, MetaAdapterFactory.getContainmentLink(0x95e80464dc8c4520L, 0xad10bc8df94efd78L, 0x4ec45abfc9ea5b49L, 0x1b60372de81147f5L, "ogranicenjaFK")), ctx);
  }
  protected static void specificirajPrimarniKljuc(List<SNode> ogranicenjaPK, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
  }
  protected static void specicirajSpoljniKljuc(List<SNode> ogranicenjaSK, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
  }
}
